# Simple OpenAI Chat Interface

A lightweight, responsive chat interface that integrates with OpenAI's GPT models. This project provides a clean, user-friendly web interface for interacting with OpenAI's chat completion API.

![Chat Interface Preview](/api/placeholder/600/300)

## Features

- 🎨 Modern, responsive UI with dark mode support
- 🔒 Secure API key handling
- 🔄 Real-time message updates
- ⚡ Loading indicators
- 📱 Mobile-friendly design
- 🌙 Automatic dark mode detection
- 💬 Message history tracking

## Project Structure

```
chat-app-tutorial/
├── index.html      # Main HTML structure
├── styles.css      # Styling and theme definitions
├── chat.js         # Chat functionality
└── README.md       # Documentation
```

## Quick Start

1. Clone the repository:
```bash
git clone https://github.com/joeBlockchain/chat-app-tutorial
cd chat-app-tutorial
```

2. Get your API Key:
   - Visit [OpenAI's platform](https://platform.openai.com/api-keys)
   - Create or log into your account
   - Navigate to API keys section
   - Generate a new API key

3. Launch the application:
   - Open `index.html` in a web browser
   - Enter your OpenAI API key
   - Start chatting!

## Customization

### Styling

The interface uses CSS variables for easy customization. Main theme colors can be modified in `styles.css`:

```css
:root {
    --primary-color: #2563eb;
    --background-color: #f8fafc;
    --chat-background: #ffffff;
    --text-color: #1e293b;
    /* ... other variables ... */
}
```

### Dark Mode

Dark mode is automatically enabled based on system preferences. Custom dark mode colors can be modified in the `@media (prefers-color-scheme: dark)` section of `styles.css`.

## Security Considerations

⚠️ **Important Notes:**

1. This is a frontend-only implementation
2. API keys are stored in memory only
3. For production use:
   - Implement proper backend authentication
   - Never expose API keys in frontend code
   - Add rate limiting
   - Implement proper error handling
   - Add message encryption

## Browser Compatibility

Tested and working in:
- Chrome (latest)
- Firefox (latest)
- Safari (latest)
- Edge (latest)

## Contributing

Feel free to:
- Submit issues
- Fork the repository
- Submit pull requests

## Future Enhancements

Potential features to add:
- [ ] Selectable models from OpenAI
- [ ] Selectable models from Anthropic
- [ ] Streaming responses
- [ ] Tool and function calling
- [ ] Web search tool
- [ ] Message persistence
- [ ] Markdown support
- [ ] File attachments
- [ ] Embedding Generations for RAG knowledge bases
- [ ] Voice input
- [ ] Text-to-speech output
- [ ] Custom avatars
- [ ] Response streaming
- [ ] Conversation export
- [ ] Multiple chat sessions

## License

MIT License - feel free to use this code for your own projects.

## Resources

- [OpenAI API Documentation](https://platform.openai.com/docs/api-reference)
- [Chat Completions Guide](https://platform.openai.com/docs/guides/chat)

## Support

For support:
1. Check existing issues
2. Create a new issue
3. Document the problem clearly
4. Include error messages and screenshots

---

Made with ❤️ for the developer community